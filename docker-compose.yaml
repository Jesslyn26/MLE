version: '3.8'

services:
  jupyter:
    build: .
    container_name: jupyter_lab_assignment_1
    ports:
      - "8888:8888"
    volumes:
      - .:/app
    environment:
      - JUPYTER_ENABLE_LAB=yes
    command: [
      "jupyter", "lab", "--ip=0.0.0.0", "--port=8888", "--no-browser",
      "--allow-root", "--notebook-dir=/app", "--ServerApp.token=''",
      "--ServerApp.disable_check_xsrf=True"
    ]

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    user: "0:0"
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./datamart:/opt/airflow/datamart
      - ./utils:/opt/airflow/utils
      - ./scripts:/opt/airflow/scripts
      - ./requirements.txt:/opt/requirements.txt
      - ./model_bank:/opt/airflow/model_bank

    environment:
      AIRFLOW__CORE__EXECUTOR: SequentialExecutor
      AIRFLOW__CORE__FERNET_KEY: DxmzW9Gt2dyM_RaxKXSbVI1WPVBBE2i3fRJvad5CP4M=
      AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    command: >
      bash -c "pip install --no-cache-dir -r /opt/requirements.txt &&
               airflow db init &&
               airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com || true"

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
      airflow-init:
        condition: service_completed_successfully

    user: "0:0"
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./datamart:/opt/airflow/datamart
      - ./utils:/opt/airflow/utils
      - ./scripts:/opt/airflow/scripts     
      - ./requirements.txt:/opt/requirements.txt
      - ./model_bank:/opt/airflow/model_bank
    ports:
      - "8080:8080"
    command: webserver
    
  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    user: "0:0"
    volumes:
      - airflow_data:/opt/airflow
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      - ./datamart:/opt/airflow/datamart
      - ./utils:/opt/airflow/utils
      - ./scripts:/opt/airflow/scripts 
      - ./requirements.txt:/opt/requirements.txt
      - ./model_bank:/opt/airflow/model_bank
    command: scheduler

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.2
    container_name: mlflow_server
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://0.0.0.0:5000
      - MLFLOW_ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - ./mlruns:/mlflow/artifacts
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlflow/artifacts

volumes:
  airflow_data:

  